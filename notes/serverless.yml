service: notes
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1

functions:
  createNote:
    handler: handler.createNote
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
        Resource: !GetAtt NewResource.Arn
    events:
      - http:
          path: notes
          method: post

  updateNote:
    handler: handler.updateNote
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:UpdateItem
        Resource: !GetAtt NewResource.Arn
    events:
      - http:
          path: notes/{id}
          method: put

  deleteNote:
    handler: handler.deleteNote
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:DeleteItem
        Resource: !GetAtt NewResource.Arn
    events:
      - http:
          path: notes/{id}
          method: delete

  getAllNotes:
    handler: handler.getAllNotes
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Scan
        Resource: !GetAtt NewResource.Arn
    events:
      - http:
          path: notes
          method: get

plugins:
  - serverless-iam-roles-per-function
# you can add CloudFormation resource templates here
resources:
 Resources:
   NewResource:
     Type: AWS::DynamoDB::Table
     Properties:
       TableName: Notes
       BillingMode: PAY_PER_REQUEST
       AttributeDefinitions:
          - AttributeName: notesId
            AttributeType: S
       KeySchema:
          - AttributeName: notesId
            KeyType: HASH


